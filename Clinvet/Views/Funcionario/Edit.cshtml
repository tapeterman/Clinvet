@model Clinvet.Models.Funcionario

@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    <section class="content">
        <div class="block-header">
            <div class="row">
                <div class="col-lg-5 col-md-5 col-sm-7">
                    <h2>
                        Edição de Funcionário
                    </h2>
                </div>
                <div class="col-lg-7 col-md-9 col-sm-7 text-right">
                    <button class="btn btn-white btn-icon btn-round hidden-sm-down float-right m-l-10" type="button">
                        <i class="zmdi zmdi-plus"></i>
                    </button>
                    <ul class="breadcrumb float-md-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="zmdi zmdi-home"></i> SysComPet</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Funcionario")">Funcionário</a></li>
                        <li class="breadcrumb-item active">Edição</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row clearfix">
                <div class="col-lg-7 col-md-7 col-sm-7">
                    <div class="card">
                        <div class="header">
                            <h2><strong><i class="zmdi zmdi-face"></i> Editar Funcionário </strong> </h2>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)
                            <ul class="header-dropdown">

                                <li class="remove">
                                    <a role="button" class="boxs-close"><i class="zmdi zmdi-close"></i></a>
                                </li>
                            </ul>
                        </div>
                        <div class="body">

                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Usuarios.Login, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.DropDownList("IdUsuario", null, htmlAttributes: new { @class = "form-control col-md-7 dropdown" })
                                     <a href="@Url.Action("Create", "Usuario")" class="btn btn-primary btn-sm btn-round waves-effect">Novo</a>
                                    @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <hr />
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <hr />
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.TituloDeEleitor, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.TituloDeEleitor, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.TituloDeEleitor, "", new { @class = "text-danger" })

                                </div>
                            </div>
                         
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Rg, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Rg, "", new { @class = "text-danger" })

                                </div>
                            </div>
                      
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })

                                </div>
                            </div>
                   
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Pis, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Pis, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Pis, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <hr />
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Funcao, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Funcao, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Funcao, "", new { @class = "text-danger" })

                                </div>
                            </div>
                   
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <hr />
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })

                                </div>
                            </div>
                     
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })

                                </div>
                            </div>
                    
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })

                                </div>
                            </div>
                   
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })

                                </div>
                            </div>
                  
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <hr />
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group form-inline">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-9" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <hr />
                            <div class="col-sm-12">
                                <a href="@Url.Action("Index", "Funcionario")" class="btn btn-raised btn-primary btn-default btn-round waves-effect">Voltar</a>
                                <button type="submit" value="Save" class="btn btn-raised btn-round btn-primary form">Salvar</button>
                            </div>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
    </section>
}

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
